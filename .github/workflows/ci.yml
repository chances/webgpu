name: Node WebGPU CI

on: push

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # node: [12.x, 13.x]
        node: [13.x]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/cache@v1
      id: depot_tools_cache
      with:
        path: lib/depot_tools
        key: ${{ matrix.os }}-depot_tools_cache
    - name: Clone Google depot_tools
      if: steps.depot_tools_cache.outputs.cache-hit != 'true' && matrix.os != 'windows-latest'
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git lib/depot_tools
    - name: Download and Unzip Google depot_tools Windows Bundle
      if: steps.depot_tools_cache.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
      run: |
        npx download-cli --extract --out lib/depot_tools https://storage.googleapis.com/chrome-infra/depot_tools.zip
    - name: Add Depot Tools to PATH
      run: |
        echo "${GITHUB_WORKSPACE}/${GITHUB_REPOSITORY}/lib/depot_tools"
        echo "::add-path::${GITHUB_WORKSPACE}/${GITHUB_REPOSITORY}/lib/depot_tools"
    - name: Clone Dawn Repo
      run: |
        git clone https://dawn.googlesource.com/dawn lib/dawn
        ls lib
    - name: Sync Dawn Repo
      working-directory: ./lib/dawn
      run: |
        cp scripts/standalone.gclient lib/dawn/.gclient
        which gclient
        echo ""
        echo "$PATH"
        gclient sync
    - name: Compile Dawn Shared Library (Unix)
      working-directory: ./lib/dawn
      if: success() && matrix.os != 'windows-latest'
      run: |
        gn gen out/Shared --target_cpu="x64" --args="is_component_build=true is_debug=false is_clang=true"
        ninja -C out/Shared
    - name: Compile Dawn Shared Library (Windows)
      working-directory: ./lib/dawn
      if: success() && matrix.os == 'windows-latest'
      run: |
        gn gen out/Shared --ide=vs --target_cpu="x64" --args="is_component_build=true is_debug=false is_clang=false"
        ninja -C out/Shared
    - name: Set Path to Dawn
      if: success()
      run: |
        echo "${GITHUB_WORKSPACE}/${GITHUB_REPOSITORY}/lib/dawn"
        echo "lib/dawn" > ${GITHUB_WORKSPACE}/${GITHUB_REPOSITORY}/lib/dawn
    - name: Install Dependencies
      if: success()
      run: |
        npm install
    - name: Build Node Addon
      if: success()
      run: |
        npm run build
    - name: Test
      if: success()
      run: |
        npm run tests
      env:
        CI: true
